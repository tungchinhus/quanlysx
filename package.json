{
  "name": "quanlysx",
  "version": "1.0.290",
  "scripts": {
    "ng": "ng",
    "start": "npm run start:copy:config:dev && npm run copy:newrelic:dev && ng serve",
    "build": "ng build",
    "build:dev": "npm run clean && npm run start:copy:config:dev && npm run copy:newrelic:dev && ng build -c=non-prod --stats-json=true && npm run start:copy:nginx:nonprod",
    "build:sit": "npm run clean && npm run start:copy:config:sit && npm run copy:newrelic:sit && ng build -c=non-prod && npm run start:copy:nginx:nonprod",
    "build:uat": "npm run clean && npm run start:copy:config:uat && npm run copy:newrelic:uat && ng build -c=pre-prod && npm run start:copy:nginx:prod",
    "build:uat-dr": "npm run clean && npm run start:copy:config:uat-dr && npm run copy:newrelic:uat-dr && ng build -c=pre-prod && npm run start:copy:nginx:prod",
    "build:prod": "npm run clean && npm run start:copy:config:prod && npm run copy:newrelic:prod && ng build -c=production && npm run start:copy:nginx:nonprod",
    "build:prod-dr": "npm run clean && npm run start:copy:config:prod-dr && npm run copy:newrelic:prod-dr && ng build -c=production && npm run start:copy:nginx:prod",
    "package:nginx:config": "cpx \"./conf.d/**/*.*\" \"./dist/conf.d/\"",
    "package:config": "node -e \"const fs=require('fs'); fs.copyFileSync('./dist/$npm_package_name/resources/app-$env.yml','./dist/$npm_package_name/resources/app.yml');\"",
    "start:copy:config:local": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-local.yml','./src/resources/app.yml');\"",
    "start:copy:config:dev": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-dev.yml','./src/resources/app.yml');\"",
    "start:copy:nginx:nonprod": "node -e \"const fs=require('fs'); const s=require('shelljs'); s.mkdir('-p','dist/conf.d'); fs.copyFileSync('./conf.d/nginx.nonprod.conf','./dist/conf.d/nginx.app.conf');\"",
    "start:copy:nginx:prod": "node -e \"const fs=require('fs'); const s=require('shelljs'); s.mkdir('-p','dist/conf.d'); fs.copyFileSync('./conf.d/nginx.app.conf','./dist/conf.d/nginx.app.conf');\"",
    "start:copy:config:sit": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-sit.yml','./src/resources/app.yml');\"",
    "start:copy:config:uat": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-uat.yml','./src/resources/app.yml');\"",
    "start:copy:config:uat-dr": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-uat-dr.yml','./src/resources/app.yml');\"",
    "start:copy:config:prod": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-prd.yml','./src/resources/app.yml');\"",
    "start:copy:config:prod-dr": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-prd-dr.yml','./src/resources/app.yml');\"",
    "start:copy:config": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/resources/app-$env.yml','./src/resources/app.yml');\"",
    "start:copy:local": "set env=local&& npm run start:copy:config",
    "watch": "ng build --watch --configuration development",
    "test": "ng test --watch=false --browsers=ChromeHeadlessNoSandbox --code-coverage=true",
    "clean": "del-cli dist",
    "snyk-test": "snyk code test --json | snyk-to-html > snyk-code-results.html",
    "copy:newrelic:dev": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/assets/newrelic/newrelic-dev.js','./src/assets/newrelic/newrelic.js');\"",
    "copy:newrelic:sit": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/assets/newrelic/newrelic-sit.js','./src/assets/newrelic/newrelic.js');\"",
    "copy:newrelic:uat": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/assets/newrelic/newrelic-uat.js','./src/assets/newrelic/newrelic.js');\"",
    "copy:newrelic:uat-dr": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/assets/newrelic/newrelic-uat-dr.js','./src/assets/newrelic/newrelic.js');\"",
    "copy:newrelic:prod": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/assets/newrelic/newrelic-prod.js','./src/assets/newrelic/newrelic.js');\"",
    "copy:newrelic:prod-dr": "node -e \"const fs=require('fs'); fs.copyFileSync('./src/assets/newrelic/newrelic-prod-dr.js','./src/assets/newrelic/newrelic.js');\"",
    "analyzer": "webpack-bundle-analyzer dist/public/stats.json"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^14.3.0",
    "@angular/cdk": "^14.2.7",
    "@angular/common": "^14.3.0",
    "@angular/compiler": "^14.3.0",
    "@angular/core": "^14.3.0",
    "@angular/forms": "^14.3.0",
    "@angular/material": "^14.2.7",
    "@angular/platform-browser": "^14.3.0",
    "@angular/platform-browser-dynamic": "^14.3.0",
    "@angular/router": "^14.3.0",
    "@ionic/angular": "^7.5.0",
    "@ngx-translate/core": "^14.0.0",
    "@ngx-translate/http-loader": "^7.0.0",
    "@stripe/stripe-js": "^7.0.0",
    "@types/file-saver": "^2.0.5",
    "@types/lodash": "^4.14.191",
    "bootstrap": "^5.2.3",
    "class-transformer": "^0.5.1",
    "file-saver": "^2.0.5",
    "jquery": "^3.7.0",
    "jspdf": "^2.5.1",
    "jwt-decode": "^3.1.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "ng-mocks": "^14.8.0",
    "ngx-bootstrap": "^9.0.0",
    "ngx-owl-carousel-o": "^14.0.1",
    "rxjs": "~7.5.0",
    "stripe": "^18.0.0",
    "tslib": "^2.3.0",
    "uuid": "^9.0.0",
    "webpack": "^5.89.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^14.2.13",
    "@angular/cli": "~14.2.10",
    "@angular/compiler-cli": "^14.2.0",
    "@types/jasmine": "~4.0.0",
    "@types/jquery": "^3.5.16",
    "@types/node": "^18.18.0",
    "@types/uuid": "^9.0.2",
    "cpx": "^1.5.0",
    "del-cli": "^5.0.0",
    "gulp": "^4.0.2",
    "gulp-gzip": "^1.4.2",
    "jasmine-core": "~4.3.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.0.0",
    "shelljs": "^0.8.5",
    "typescript": "~4.7.2",
    "webpack-bundle-analyzer": "^4.9.1"
  }
}
